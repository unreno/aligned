<h1>Alignments</h1>

<p>
A reference was compiled and it was aligned to both hg19 and hg38.
The results were stuffed into a database.
</p>

<pre>
bowtie2 --xeq -x hg19 --no-unal --all -f -U SVAs_and_HERVs_KWHE.fasta \
  --very-sensitive -S SVAs_and_HERVs_KWHE.hg19.vs.sam

bowtie2 --xeq -x hg19 --no-unal --all -f -U SVAs_and_HERVs_KWHE.fasta \
  --very-sensitive-local -S SVAs_and_HERVs_KWHE.hg19.vsl.sam

bowtie2 --xeq -x hg38 --no-unal --all -f -U SVAs_and_HERVs_KWHE.fasta \
  --very-sensitive -S SVAs_and_HERVs_KWHE.hg38.vs.sam

bowtie2 --xeq -x hg38 --no-unal --all -f -U SVAs_and_HERVs_KWHE.fasta \
  --very-sensitive-local -S SVAs_and_HERVs_KWHE.hg38.vsl.sam

gawk 'BEGIN{OFS=","}
( FNR == 1 ){ ref=(FILENAME~/hg19/)?"hg19":"hg38"; }
( /^@/ ){ next; }
{
  split($6,a,/[[:alpha:]=]/,s);
  eq=l=0;
  for(i=1;i&lt;=length(s);i++){ l+=a[i]; if( s[i] == "=" ) eq+=a[i]; }
  percent_eq=100.0*eq/l;
  reverse=and($2,16)==16;
  ed="";
  for(i=12;i&lt;=NF;i++){ split($i,a,":"); if( a[1]=="NM" ) ed=a[3]; }
  percent_ed=100.0*ed/l;
  print $1,$2,reverse,ref,$3,$4,$6,eq,l,percent_eq,ed,percent_ed;
}' SVAs_and_HERVs_KWHE.hg*.vs*.sam &gt; alignments.csv


#	Development
mysql -u root aligned_development -e 'TRUNCATE alignments'

mysql -u root --local-infile aligned_development -e "
  LOAD DATA LOCAL INFILE 'alignments.csv'
  INTO TABLE alignments FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'
  (sequence,flags,reverse,reference,chromosome,position,cigar,length_eq,length_all,percent_eq,edit_distance,percent_ed)"

#	Or Production
mysql -u root aligned_production -e 'TRUNCATE alignments'

mysql -u root -p --local-infile aligned_production -e "
  LOAD DATA LOCAL INFILE 'alignments.csv'
  INTO TABLE alignments FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'
  (sequence,flags,reverse,reference,chromosome,position,cigar,length_eq,length_all,percent_eq,edit_distance,percent_ed)"
</pre>







<p>
I noticed that, for HERVK113, the default --sensitive --end-to-end alignment finds a complete 100% match.
Using --very-sensitive-local finds to matches at the same position but fails to make a complete match.
I'm guessing that the presets are more appropriate for 100-200 bp reads, NOT 10,000.
Perhaps I should try meddling with these values.
</p>

<p>percent_m is not as meaningful as expected. M can mean match or mismatch. Very sad that bowtie2 uses this SAM format allowed ambiguity. The CIGAR string needs to be used with great caution. The fields after the 11th column should be considered.
</p>

<p>
bowtie2 actually has = and X, but the code explicitly replaces them with Ms?
Modifying this behaviour and recompiling bowtie2 from source.
</p>
<pre>
```BASH
sed -i -e 's;^prefix = /usr/local$;prefix = ~/.local;' Makefile
sed -i -e 's/buildCigar(false);/buildCigar(true);/' aln_sink.cpp
INC="-L /opt/local/lib/" make -e
make install
```
</pre>
<p>Using my modified bowtie2 2.2.9 which outputs = or X rather than just the ambiguous M.</p>


<p>New versions of bowtie2 won't need the "buildCigar" modification, but add option --xeq.</p>

<ul>
Next time, 
<li>change "reverse:true,false" to "direction:R,F"</li>
<li>also align LTRs, and add our found insertion points</li>
</ul>



<%= link_to 'Search the results', alignments_path %>
